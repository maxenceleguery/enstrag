events {
    worker_connections  4096;  ## Default: 1024
}

http {

    #server {
    #    listen 80;
    #    server_name brazzaville.ensta.fr www.brazzaville.ensta.fr;

        # Redirect HTTP to HTTPS
    #    return 301 https://$host$request_uri;
    #}

    server {
        #listen 443 ssl http2;
        #server_name yourdomain.com www.yourdomain.com;

        #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

        # SSL Configuration
        #ssl_certificate /etc/nginx/ssl/nginx.crt;      # Path to your SSL certificate
        #ssl_certificate_key /etc/nginx/ssl/nginx.key;  # Path to your private key

        # Recommended SSL settings
        #ssl_protocols TLSv1.2 TLSv1.3;
        #ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        #ssl_prefer_server_ciphers off;
        #ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        listen 80;

        location / {
            proxy_pass http://flask:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /auth/ {
            proxy_pass http://flask:5000/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        set $masupervariable 0;

        location /enstrag/ {
            # Check if the user is authenticated by querying Flask's session
            # Only forward to Gradio if authenticated
            if ($masupervariable) {#$http_cookie !~ "CAS_USERNAME") {
                return 302 http://$host/;  # Redirect to Flask's login page
            }

            # If the user is authenticated, proxy the request to Gradio
            proxy_pass http://front:7860/;  # Forward to Gradio at 7860
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~* /(gradio_api|themes*) {
            if ($masupervariable) {#$http_cookie !~ "CAS_USERNAME") {
                return 302 http://$host/;  # Redirect to Flask's login page
            }

            proxy_pass http://front:7860;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        #listen 443 ssl;  # To block https requests
        listen 8080;     # You can add more ports here that need to be blocked
        listen 7860;
        listen 5000;
        listen 8000;

        # Return a forbidden error for any request on non-80 ports
        location / {
            return 403;  # Forbidden, block all traffic except port 80
        }
    }
}
